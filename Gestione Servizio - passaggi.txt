1) Creo services/posts.service.ts per i servizi
2) Creo models/posts.ts dove inserisco i dati dei post/categorie tramite export type o export interface
3) Dentro posts.service creo un metodo che restituisce i Post e un metodo che restituisce le categorie 
   Genero components/posts-list e components/posts-detail e aggiungo bootstrap in index.html
4) Dentro posts-list.component.ts inietto il servizio PostsService per poter accedere ai dati dei post tramite inject o constructor
5) Dentro a posts-list.component.ts richiamo il metodo getPosts() del servizio per ottenere i post. Aggiungo a export: implements OnInit e inserisco il metodo    getPosts() all'interno di esso e mi creo la proprietà su cui mi baserò per creare l'html (posts: Post[] = []; e categories: PostCategory[] = [];)
6) Dentro a posts-detail.component.ts (che mi fa vedere i dettagli del post), dentro export metto @Input() post?: Post;
7) Creo il file html di posts-detail per i dettagli del post tramite @if (post)
8) Vado in posts-list.component.html per creare il ciclo for (@for (p of posts; track $index)) dove richiamo <app-post-detail> che si importerà in posts-   list.component.ts
9) Vado in app.component.html e inserisco <app-posts-list> che si importerà in app.component.ts
10) Nel servizio (posts.service.ts) creo una funzione (getPostsByCategory(category: PostCategory){}) che mi ritorna i dati filtrati per categoria
11) In posts-list.component.html creo i bottoni e poi un ciclo for sulle categorie
12) In posts-list.component.ts creo una funzione che cliccando sui bottoni mi permette di filtrare i post per categoria
13) In posts-list.component.html richiamo la funzione creata al passaggio 12
14) In posts-list.component.html creo un bottone per rivedere tutti i post senza dividerli in categoria
15) In posts-list.component.ts aggiungo alla funzione un else, in modo che se non viene passata una categoria, recupero tutti i post
16) In posts-list.component.ts importo CommonModule per farsì di poter usare NgClass poi in posts-list.component.html
17) In posts.service.ts gestisco la logica della selezione della categoria
18) In posts-list.component.html aggiungo NgClass e active per vedere se la categoria è selezionata o sul pulsante tutti se la categoria non è selezionata
19) In posts.service.ts gestisco la logica dei preferiti e creo una funzione per aggiungere i preferiti e una per rimuoverli dai preferiti e una per svuotare i preferiti
20) In posts-detail.component.ts aggiungo injiect per iniettare il servizio
21) In posts-detail.component.html aggiungo (click)="" per aggiungere il post ai preferiti
22) In app.component.html aggiungo <app-preferiti> e aggiungo inject a preferiti.component.ts
23) In preferiti.component.html creo un ciclo for e al click sul bottone rimuovi dai preferiti e creo un if e sull'altro bottone svuota dai preferiti